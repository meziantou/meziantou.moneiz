@page "/scheduler"
@using Meziantou.Framework.Scheduling
@inject DatabaseProvider DatabaseProvider
@inject ConfirmService ConfirmService
@inject NavigationManager NavigationManager

<h1>Scheduler</h1>

<div class="toolbar">
    <a class="btn" href="/scheduler/create">Create scheduled transaction</a>
</div>

<Repeater Items="database?.ScheduledTransactions.OrderBy(t => t.Name)">
    <RepeaterContainerTemplate>
        <table>
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Account</th>
                    <th>Amount</th>
                    <th>Rule</th>
                    <th>Next occurrence</th>
                    <th></th>
                </tr>
            </thead>
            @context
        </table>
    </RepeaterContainerTemplate>

    <ItemTemplate Context="scheduledTransaction">
        <tr>
            <td>@scheduledTransaction.Name</td>
            <td>@scheduledTransaction.Account</td>
            <td><Amount Value="scheduledTransaction.Amount" Currency="@scheduledTransaction.Account?.CurrencyIsoCode" /></td>
            <td title="@scheduledTransaction.RecurrenceRuleText">@scheduledTransaction.RecurrenceRule.GetHumanText()</td>
            <td>
                <details>
                    <summary><UserDate Date="@scheduledTransaction.NextOccurenceDate" /></summary>
                    <ul>
                        @foreach (var occurrence in scheduledTransaction.GetNextOccurences().Take(10))
                        {
                            <li><UserDate DateTime="@occurrence" /></li>
                        }
                    </ul>
                </details>
            </td>
            <td class="commands">
                <Dropdown>
                    <li><a class="duplicate" href="/scheduler/create?DuplicatedScheduleTransactionId=@scheduledTransaction.Id"><i class="fas fa-copy"></i> Duplicate</a></li>
                    <li><a class="edit" href="/scheduler/@scheduledTransaction.Id/edit"><i class="fas fa-pencil-alt"></i> Edit</a></li>
                    <li><button type="button" class="btn-link" @onclick="() => Delete(scheduledTransaction)"><i class="fas fa-trash" style="color: red"></i> Delete</button></li>
                </Dropdown>
            </td>
        </tr>
    </ItemTemplate>
</Repeater>

@code {
    Database database;

    protected override async Task OnInitializedAsync()
    {
        database = await DatabaseProvider.GetDatabase();
    }

    private async Task Delete(ScheduledTransaction scheduledTransaction)
    {
        if (await ConfirmService.Confirm($"Do you want to delete '{scheduledTransaction.Name}'"))
        {
            database.RemoveScheduledTransaction(scheduledTransaction);
            await DatabaseProvider.Save();
        }
    }
}