@page "/scheduler/create"
@page "/scheduler/{Id:int}/edit"
@inject NavigationManager NavigationManager
@inject DatabaseProvider DatabaseProvider

<h1>Create scheduled transaction</h1>

<LoadingIndicator IsLoading="_database is null">
    <EditForm Model="@_model" OnValidSubmit="OnSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>
                Name
                <InputText @bind-Value="_model!.Name" />
            </label>
        </div>

        <div class="form-group">
            <label>
                Start date
                <InputDate @bind-Value="_model.StartDate" />
            </label>
        </div>

        <div class="form-group">
            <label>
                Recurrence rule (<a href="https://www.textmagic.com/free-tools/rrule-generator">generator</a>)
                <InputText @bind-Value="_model.RecurrenceRule" list="RecurrenceRuleSamples" />
            </label>

            <datalist id="RecurrenceRuleSamples">
                <option>FREQ=DAILY;INTERVAL=1</option>
                <option>FREQ=WEEKLY;BYDAY=FR;INTERVAL=2</option>
                <option>FREQ=MONTHLY;BYMONTHDAY=1;INTERVAL=1</option>
                <option>FREQ=MONTHLY;BYSETPOS=-1;BYDAY=MO,TU,WE,TH,FR;INTERVAL=1</option>
            </datalist>
        </div>

        @if (_database!.VisibleAccounts.Skip(1).Any())
        {
            <div class="form-group">
                <label>
                    Inter-account
                    <InputCheckbox @bind-Value="_model.InterAccount" />
                </label>
            </div>
        }

        <div class="form-group">
            <label>
                @if (_model.InterAccount)
                {
                    @: Debited account
                }
                else
                {
                    @: Account
                }
                <InputSelectAccount @bind-Value="_model.DebitedAccount" />
            </label>
        </div>

        @if (_model.InterAccount)
        {
            <div class="form-group">
                <label>
                    CreditedAccount
                    <InputSelectAccount @bind-Value="_model.CreditedAccount" />
                </label>
            </div>
        }

        @if (!_model.InterAccount)
        {
            <div class="form-group">
                <label>
                    Payee
                    <InputText @bind-Value="_model.Payee" list="Payees" @onfocusout="OnPayeeChanged" />
                </label>

                <datalist id="Payees">
                    @foreach (var payee in _database.Payees.OrderBy(p => p.Name))
                    {
                        <option value="@payee" />
                    }
                </datalist>
            </div>
        }

        <div class="form-group">
            <label>
                Category
                <InputSelectCategory IsOptional="true" @bind-Value="_model.Category" />
            </label>
        </div>

        <div class="form-group">
            <label>
                Amount
                <InputNumber @bind-Value="_model.Amount" />
            </label>
        </div>

        <div class="form-group">
            <label>
                Comment
                <InputText @bind-Value="_model.Comment" />
            </label>
        </div>

        <button type="submit">Submit</button>
    </EditForm>
</LoadingIndicator>