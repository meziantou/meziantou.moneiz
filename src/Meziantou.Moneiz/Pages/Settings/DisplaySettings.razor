@page "/settings"

<h1>Settings</h1>

<EditForm Model="displaySettings" OnValidSubmit="Save">
    <div class="form-group">
        <label>
            Page Size
            <InputNumber @bind-Value="displaySettings.PageSize" />
        </label>
    </div>

    <div class="form-group">
        <label>
            Date format
            <InputSelect @bind-Value="displaySettings.DateFormat">
                <option value="">(default)</option>
                @foreach(var format in formats)
                {
                    <option value="@format">@sampleDate.ToString(format)</option>    
                }
            </InputSelect>
        </label>
    </div>

    <button type="submit">Save</button>
</EditForm>

@code {
    DateOnly sampleDate;
    MoneizDisplaySettings displaySettings = new();

    string[] formats = { "yyyy/MM/dd", "dd/MM/yyyy", "MM/dd/yyyy", "dd MMM yyyy" };

    [System.Diagnostics.CodeAnalysis.SuppressMessage("ApiDesign", "RS0030:Do not use banned APIs", Justification = "Get user time")]
    protected override async Task OnInitializedAsync()
    {
        DateTime now = DateTime.Now;
        sampleDate = new DateOnly(now.Year, 1, DateTime.DaysInMonth(now.Year, 1));
        displaySettings = await SettingsProvider.GetDisplaySettings();
    }

    private async Task Save()
    {
        await SettingsProvider.SetDisplaySettings(displaySettings);
    }
}